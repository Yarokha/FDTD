#импортируем нужные библиотеке
import numpy as np #для численного
import matplotlib.pyplot as plt # для построения
import math as m #для использования матфункций

#функция проверки, когда электрическое поле очень мало
def checker(e,n):
    for i in range(n): # цикл бегающей по массиву эл поля
        if abs(e[i]) < 10**(-4): #условие определяющие достигнутое значение эл поля
            ch = False
        else:
            return True
    return ch

#здание парматров
N = 500
sigma = 10.0
MaxTime = 1000
delay = 100.0

#иницилизация массивов полей размерности N, заполненных нулями
hy = np.zeros(N)
ez = np.zeros(N)

imp0 = 377.0

#иницилизация координат пространства для построения  на графике
x = np.linspace(0, N-1, N)
# plt.ion()


for t in range(MaxTime): #цикл по времени
    hy[:-1] += (ez[1:] - ez[:-1]) / imp0 #пересчет магнитного поля из электрического
    ez[1:] += (hy[1:] - hy[:-1]) * imp0 #пересчет эелектрического из магнитного
    ez[int(N/2)-1] += m.exp(-((t-delay)/sigma)**2) #Заведения гауса в систему через электрическое поле в центре системы

    if t % 25 == 0: #условие, что кажды 25ый шаг во времени будет строиться
        plt.plot(x, ez) #построение эл поля
        plt.plot(x, hy*imp0) #построение магнитного поля, домножение на импенданс свободного пространства чисто для скалирования
        plt.pause(0.00001) #паза для отображения графика
        plt.clf() #очистка графика чтобы избежать наложения на предыдущий
    #отличие закоментированного состоит в том что здесь графики строяться не в одном окне
    # а в двух. магнитное поле под электрическим и только один раз
    # if not checker(ez, N) and t > 80000: #условие не выполнятется и и временной шаг очень большо
    #     plt.clf() #очистка график
    #     plt.subplot(211) # 2строки, 1 столбец, первая строка примерно так это читается
    #     plt.plot(x, ez) # постороение эл поля
    #     plt.subplot(212) # 2строки, 1 столбец, вторая строка
    #     plt.plot(x, hy * imp0) #построение маг поля
    #     plt.show() #Отобразить график
    #     break № прерывание цикла и как следдствие завершение программы
